{"version":3,"sources":["logo.svg","component/Home.js","component/MineCoins.js","component/BuyCoins.js","component/SellCoins.js","component/LedgerDetails.js","component/BrowseLedger.js","component/ShintoCoinApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","Component","MineCoins","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","parseInt","value","console","log","error","handleSubmit","event","preventDefault","state","miningquestion","answer","addTransactionToLedger","action","amount","question","currentquestion","_this2","onSubmit","type","onChange","displayError","BuyCoins","coinsbought","coinvalue","totalcoins","SellCoins","coinssold","LedgerDetails","getTransactionLedger","transactionledger","map","item","index","id","match","params","transaction","BrowseLedger","items","react_router_dom","to","concat","ShintoCoinApp","ledgerentry","temptotal","transactions","enterTransaction","axios","post","then","response","bankdetails","data","catch","getBankDetails","get","length","onClick","react_router","exact","path","render","component","component_MineCoins","component_BuyCoins","component_SellCoins","component_BrowseLedger","component_LedgerDetails","assign","App","component_ShintoCoinApp","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee75771d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport '../style/shintocoin.css'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"homeouterdiv\"> \n       <h1>ShintoCoin</h1>\n       <p> Welcome to ShintoCoins, ShintoCoins are coins made by solving algorithms! To get started head over to Mine Coins' and get to work! </p>\n    \n    \n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport '../style/shintocoin.css'\n\nclass MineCoins extends Component {\n  constructor(props){\n    super(props);\n    this.state={answer:\"\",\n                miningquestion:[{question:\"What is the 6th fibonacci number\",\n                                 answer:5}],\n                currentquestion:\"\",\n                error:\"\"            \n               }\n  }             \n \n   handleChange=(e)=>{\n   \n       this.setState({[e.target.name]:parseInt(e.target.value)});\n       if(e.target.name===\"answer\" && e.target.value===\"\"){\n         console.log(\"hi\");\n        }\n        this.setState({error:\"\"});\n \n\n   }\n   handleSubmit=(event)=>{\n     event.preventDefault();\n     if(this.state.miningquestion[0].answer === this.state.answer){\n         this.props.addTransactionToLedger({action:\"Mine\",amount:1,value:\"\"});\n     }else{\n          this.setState({error:\"Wrong answer please try again.\"})\n     }\n     this.setState({answer:\"\"});\n     this.setState({error:\"\"});\n \n   }\n   \n\n  render() {\n    const displayButton=()=>{\n\n      if(this.state.answer===\"\"){\n          return <input className=\"disable\" type=\"submit\" value=\"Mine\" />\n      }else{\n          return <input className=\"buttonstyle\" type=\"submit\" value=\"Mine\"/>\n      }\n     } \n     const displayError=()=>{\n      if( this.state.error!==\"\"){\n         return <div className=\"errormessage\">{this.state.error}</div>\n      }\n\n     }\n    return (\n      <div className=\"outerformdiv\"> \n       <h1>Mine ShintoCoins</h1>\n       <p>Here you can mine ShintoCoins by being the first one to solve the algorithm:</p>\n       <p>{this.state.miningquestion[0].question}</p>\n      \n       <div className=\"formdiv\">\n          <form onSubmit={this.handleSubmit}>\n            <input className=\"inputsyle\" type=\"number\" name=\"answer\" onChange={this.handleChange} value={this.state.answer}/>\n            {displayButton()}\n            {displayError()}\n          </form>\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default MineCoins;","import React, { Component } from 'react';\nimport '../style/shintocoin.css'\n\nclass BuyCoins extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n                coinsbought:\"\",\n                error:\"\"            \n               }\n  }             \n \n   handleChange=(e)=>{\n   \n       this.setState({[e.target.name]:parseInt(e.target.value)});\n       if(e.target.name===\"coinsbought\" && e.target.value===\"\"){\n         console.log(\"hi\");\n        }\n        this.setState({error:\"\"});\n \n\n   }\n   handleSubmit=(event)=>{\n     event.preventDefault();\n     if(this.state.coinsbought !== 0){\n          let coinvalue=this.props.coinvalue;\n          coinvalue=coinvalue+this.state.coinsbought;\n          this.props.addTransactionToLedger({action:\"Buy\",amount:this.state.coinsbought,value:coinvalue});\n     }else{\n          this.setState({error:\"Wrong answer please try again.\"})\n     }\n     this.setState({coinsbought:\"\"});\n \n   }\n\n\n  render() {\n    console.log(this.state.coinsbought);\n    const displayButton=()=>{\n\n      if(this.state.coinsbought===\"\"){\n          return <input className=\"disable\" type=\"submit\" value=\"Buy\" />\n      }else{\n          return <input className=\"buttonstyle\" type=\"submit\" value=\"Buy\"/>\n      }\n     } \n     const displayError=()=>{\n      if( this.state.error!==\"\"){\n         return <div>{this.state.error}</div>\n      }\n\n     }\n    return (\n      <div className=\"outerformdiv\"> \n       <h1>Buy ShintoCoins</h1>\n       <p>Current ShintoCoin Value  : {this.props.coinvalue}</p>\n       <p>No of ShintoCoins owned   : {this.props.totalcoins}</p>\n      \n       <div className=\"formdiv\">\n          <form onSubmit={this.handleSubmit}>\n            <input className=\"inputsyle\" type=\"number\" name=\"coinsbought\" onChange={this.handleChange} value={this.state.coinsbought}/>\n            {displayButton()}\n            {displayError()}\n          </form>\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default BuyCoins;","import React, { Component } from 'react';\nimport '../style/shintocoin.css'\n\nclass SellCoins extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n                coinssold:\"\",\n                error:\"\"            \n               }\n  }             \n \n   handleChange=(e)=>{\n   \n       this.setState({[e.target.name]:parseInt(e.target.value)});\n       if(e.target.name===\"coinsbought\" && e.target.value===\"\"){\n         console.log(\"hi\");\n        }\n        this.setState({error:\"\"});\n \n\n   }\n   handleSubmit=(event)=>{\n     event.preventDefault();\n     console.log(\"coin\",this.props.totalcoins-this.state.coinssold);\n     if((this.props.totalcoins-this.state.coinssold)>=0){\n        if(this.state.coinssold !== 0 && this.props.coinvalue>=1 && this.props.totalcoins>0 ){\n              let coinvalue=this.props.coinvalue;\n              if(this.props.coinvalue>1){\n                coinvalue=coinvalue-this.state.coinssold;\n                if(coinvalue<=0){\n                  coinvalue=1;\n                }\n              }\n              this.props.addTransactionToLedger({action:\"Sell\",amount:this.state.coinssold,value:coinvalue});\n        }else{\n              this.setState({error:\"Your coins don't have enough value to sell.\"})\n        }\n        this.setState({coinsbought:\"\"});\n     }else{\n       this.setState({error:\"You don't have enough coins to sell\"})\n     }  \n \n   }\n\n\n  render() {\n    console.log(this.state.coinssold);\n    const displayButton=()=>{\n\n      if(this.state.coinssold===\"\"){\n          return <input className=\"disable\" type=\"submit\" value=\"Sell\" />\n      }else{\n          return <input className=\"buttonstyle\" type=\"submit\" value=\"Sell\"/>\n      }\n     } \n     const displayError=()=>{\n      if( this.state.error!==\"\"){\n         return <div className=\"errormessage\">{this.state.error}</div>\n      }\n\n     }\n    return (\n      <div className=\"outerformdiv\"> \n       <h1>Sell ShintoCoins</h1>\n       <p>Current ShintoCoin Value  : {this.props.coinvalue}</p>\n       <p>No of ShintoCoins owned   : {this.props.totalcoins}</p>\n      \n       <div className=\"formdiv\">\n          <form onSubmit={this.handleSubmit}>\n            <input className=\"inputsyle\" type=\"number\" name=\"coinssold\" onChange={this.handleChange} value={this.state.coinssold}/>\n            {displayButton()}\n            {displayError()}\n          </form>\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default SellCoins;","import React, { Component } from 'react';\nimport '../style/shintocoin.css'\n\nclass LedgerDetails extends Component {\n  constructor(props){\n    super(props);\n\n  }\n  componentDidMount(){\n    this.props.getTransactionLedger();\n  }\n  render() {\n    const displayLedgerDetails=()=>{\n      const transaction= this.props.transactionledger.map((item,index)=>{\n        let action=\"\";\n        if(item.id ===this.props.match.params.id){\n          if(item.transaction.action===\"Buy\"){\n            action=\"Bought\";\n          }else if(item.transaction.action===\"Sell\"){\n             action=\"Sold\";\n          }else if(item.transaction.action===\"Mine\"){\n             action=\"Mined\";\n          }\n          return (<div>\n                      <span>Transaction #{item.id} </span>\n                      <p>\n                        <span className=\"spanbold\">{action}</span>\n                         <span className=\"spanledgerdetails\">{item.transaction.amount} ShintoCoins</span>\n                      </p>\n\n                  </div>)\n        }          \n\n      })\n      return transaction;\n    }\n    return (\n      <div className=\"outerformdiv\"> \n        <h1>Ledger Transaction Details</h1>\n        <div className=\"ledgerinnerdiv\">Detailed view of Transaction from ledger</div>\n         {displayLedgerDetails()}\n    \n    \n      </div>\n    );\n   }\n}\n\nexport default LedgerDetails;","import React, { Component } from 'react';\nimport '../style/shintocoin.css';\nimport \"react-router\";\nimport {\n  BrowserRouter,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport LedgerDetails from './LedgerDetails';\n\nclass BrowseLedger extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n                transactionledger:[],\n                error:\"\"            \n               }\n  }  \n \n  render() {\n    \n    const displayLedger=()=>{\n       const transctionitems=this.props.transactionledger.map((items,index)=>{\n       \n         return (<div  className=\"itemheaderstyle\">\n                   <span className=\"itemstyle\">{items.transaction.action}</span>\n                   <span className=\"itemstyle\">{items.transaction.amount}</span>\n                   <span className=\"itemstyle\">{items.transaction.value}</span>\n                   <span className=\"itemstyle\">\n                    <Link to={`/ledgerdetails/${ items.id }`}>Details</Link>\n\n                   </span>\n                   </div>\n                  )\n                 \n\n         })\n      return transctionitems;\n    }\n  \n    return (\n      \n      <div className=\"outerformdiv\"> \n        <h1>Brows Ledger</h1>\n        <p>Here you can browse all ShintoCoin transactions</p>\n        <div className=\"itemouterdiv\">\n        <div className=\"ledgerheader\">ShintoCoin Ledger</div>\n        <div className=\"itemheaderstyle\"><span className=\"itemstyle\">Action</span><span className=\"itemstyle\">Amount</span><span className=\"itemstyle\">Value</span></div>\n        \n        \n          {displayLedger()}\n       \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BrowseLedger;","import React, { Component } from 'react';\nimport \"react-router\";\nimport {\n  BrowserRouter,\n  Route,\n  Link,\n  Switch,\n  Redirect\n} from \"react-router-dom\"\nimport '../style/shintocoin.css'\nimport Home from './Home';\nimport MineCoins from './MineCoins';\nimport BuyCoins from './BuyCoins';\nimport SellCoins from './SellCoins';\nimport BrowseLedger from './BrowseLedger';\nimport axios from 'axios';\nimport LedgerDetails from './LedgerDetails';\n\nclass ShintoCoinApp extends Component {\n  constructor(props){\n      super(props);\n      this.state={transactions:[],\n                  coinvalue:1,\n                  totalcoins:0,\n                //   transactionledger:[],\n                  transactionledger:[{\"id\":\"1\",\"transaction\":{\"action\":\"Mine\",\"amount\":1,\"value\":1}},{\"id\":\"2\",\"transaction\":{\"action\":\"Buy\",\"amount\":5,\"value\":6}},{\"id\":\"3\",\"transaction\":{\"action\":\"Mine\",\"amount\":1,\"value\":6}},{\"id\":\"4\",\"transaction\":{\"action\":\"Buy\",\"amount\":5,\"value\":11}}]\n                }\n  }  \n  addTransactionToLedger=(ledgerentry)=>{\n\n      if(ledgerentry.action===\"Mine\"){\n\n        ledgerentry.value=this.state.coinvalue;\n        let temptotal=this.state.totalcoins;\n        temptotal=temptotal+1;\n        this.setState({totalcoins:temptotal});\n        this.setState({coinvalue:ledgerentry.value});\n\n       }else if(ledgerentry.action===\"Buy\"){\n        \n        let temptotal=this.state.totalcoins;\n        temptotal=temptotal+ledgerentry.amount;\n        this.setState({totalcoins:temptotal})\n        this.setState({coinvalue:ledgerentry.value});\n\n       }else if(ledgerentry.action===\"Sell\"){\n\n        let temptotal=this.state.totalcoins;\n        temptotal=temptotal-ledgerentry.amount;\n        this.setState({totalcoins:temptotal})\n        this.setState({coinvalue:ledgerentry.value});\n          \n       }\n        this.setState({transactions:ledgerentry});\n\n        console.log(\"coins\",this.state.totalcoins);\n        console.log(\"ledger\",ledgerentry);\n        this.enterTransaction(ledgerentry);\n\n  }\n  enterTransaction=(transaction) =>{\n    axios.post(`http://localhost:5000/entertransaction/`,{transaction})\n         .then((response) => {\n               let bankdetails=response.data.bankdetails;\n               console.log(\"posted a the transaction\",response.data.bankdetails);\n               this.setState({coinvalue:bankdetails.coinvalue});\n               this.setState({totalcoins:bankdetails.totalcoins});\n              \n        })\n        .catch((error) => {\n            this.setState({error:\"Server connection failed\"});\n        });\n }\n getBankDetails=()=>{\n    axios.get(`http://localhost:5000/getbankdetails/`)\n    .then((response )=> {\n          let bankdetails=response.data.data[response.data.data.length-1];\n          console.log(\"got the response from shinto bank\",response.data.data[response.data.data.length-1]);\n          this.setState({coinvalue:bankdetails.coinvalue});\n          this.setState({totalcoins:bankdetails.totalcoins});\n         \n   })\n   .catch((error) => {\n       this.setState({error:\"Server connection failed\"});\n   });\n\n }\n getTransactionLedger=()=>{\n    axios.get(`http://localhost:5000/gettransactionedger/`)\n    .then((response )=> {\n          let ledger=response.data;\n          console.log(\"got the response from shinto bank\",response.data);\n          this.setState({transactionledger:response.data.data});\n         \n   })\n   .catch((error) => {\n       this.setState({error:\"Server connection failed\"});\n   });\n\n }\n componentDidMount(){\n     this.getBankDetails();\n }\n\n  render() {\n    console.log(\"posted a the transaction1\",this.state.totalcoins);\n    console.log(\"posted a the transaction2\",this.state.coinvalue);\n    return (\n      <div> \n       <BrowserRouter>\n          <div className=\"naviouterdiv\">\n                <div className=\"logostyle\"></div>\n                <div className=\"navibarstyle\" ><Link to=\"/home\">Home</Link></div>\n                <div className=\"navibarstyle\" ><Link to=\"/minecoins\">Mine Coins</Link></div>\n                <div className=\"navibarstyle\" ><Link to=\"/buycoins\">Buy Coins</Link></div>\n                <div className=\"navibarstyle\" ><Link to=\"/sellcoins\">Sell Coins</Link></div>\n                <div className=\"navibarstyle\" ><Link onClick={this.getTransactionLedger}to=\"/browseledger\">Browse Ledger</Link></div>\n           </div>  \n            <div className=\"routerdiv\">\n               <Switch>\n                <Route exact path=\"/\" render={() => (\n                    <Redirect to=\"/home\" />\n                )} />\n                \n                    <Route path=\"/home\" component={Home}/>\n                    <Route path=\"/minecoins\" render={() => { return <MineCoins addTransactionToLedger={this.addTransactionToLedger}/>;}}/>\n                    <Route path=\"/buycoins\"  render={() => { return <BuyCoins addTransactionToLedger={this.addTransactionToLedger} totalcoins={this.state.totalcoins} coinvalue={this.state.coinvalue}/>}}/>\n                    <Route path=\"/sellcoins\" render={() => { return <SellCoins addTransactionToLedger={this.addTransactionToLedger} totalcoins={this.state.totalcoins} coinvalue={this.state.coinvalue}/>}}/>\n                    <Route path=\"/browseledger\" render={() => { return <BrowseLedger getTransactionLedger={this.getTransactionLedger} transactionledger={this.state.transactionledger} />}}/>\n                    <Route path=\"/ledgerdetails/:id\" render={ (props) => { return <LedgerDetails {...props} getTransactionLedger={this.getTransactionLedger} transactionledger={this.state.transactionledger} /> }}/>\n               \n                </Switch>            \n            </div>\n         \n       </BrowserRouter>\n    \n    \n      </div>\n    );\n  }\n}\n\nexport default ShintoCoinApp;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ShintoCoinApp from './component/ShintoCoinApp';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <ShintoCoinApp/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}